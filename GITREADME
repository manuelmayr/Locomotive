Hallo lieber Mitarbeiter,
dies ist Dein GIT Repository, in dem du in Zukunft Deine
arbeitsrelevanten Dateien aufbewahren kannst.
GIT ist ein Version Control System, wie CVS oder SVN.

Ein kleines Tutorial, das Dir die ersten Schritte im Umgang
mit GIT ein bisschen näherbringt findest Du hier:
http://www.ruby-mine.de/2008/1/7/eine-kurze-einfuhrung-in-git''.
Ein vollständiges Manual zu GIT findest du hier:
http://www.kernel.org/pub/software/scm/git/docs/user-manual.html''.

Bei Fragen oder Problemen, die im Zusammenhang mit GIT auftauchen
wende Dich bitte an
                  
    Manuel Mayr <mayr@informatik.uni-tuebingen.de>

########################### Wichtig #############################

Hier noch einige Richtlinien, die für Dich bei der Benutzung
des Repositories gelten:

-- Beachte, dass das Repository in den meisten Fällen nicht nur
   von Dir alleine benutzt wird. Führe vor jedem Deiner "checkins"
   unbedingt ein git pull'' durch. Das "pull" Kommando mergt
   Veränderungen, welche von anderen Mitarbeitern getätigt worden
   sind in deinen aktuellen branch.

-- Checke bitte keine Objekt-Dateien (z.B. *.class, *.o) ein.
   Hier gilt die Regel: Alles was aus Quellcode generiert
   werden kann, ist im Repository nicht erwünscht.

-- Quellcode, der eingecheckt wird muss kompilierbar sein.

-- Versehe deine Projekte mit "Make"-Skripten, die ein einfaches
   kompilieren ermöglichen (z.B. Makefiles in C/C++, Ant-Skripte
   in Java, Cabal in Haskell). Abhängigkeiten zu verwendeten
   Libraries müssen dokumentiert werden.

-- Experimente können natürlich auch ins Repository eingecheckt
   werden. Achte darauf, dass Du jedes Experiment mit einer kurzen
   Beschreibung versiehst.

   Die Beschreibung kann folgendermaßen aussehen:

   Hostname:
   Operating System:
   Memory:
   CPU:
   Description:

